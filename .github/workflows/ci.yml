name: CI & Docker Publish

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "0 20 * * *"
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: aixtraball_website_frontend
  WEBSITE_DIR: aixtraball_website

concurrency:
  group: ci-docker-publish
  cancel-in-progress: false

jobs:

  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flask-testing

      - name: Run unit tests
        run: pytest

  docker:
    needs: test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          pull: true         # neueste Base-Images ziehen
          no-cache: true     # keine alten Layer nutzen
          tags: |
            ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          format: table
          exit-code: "0"           # "1" setzen, wenn Build bei Funden fehlschlagen soll
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
